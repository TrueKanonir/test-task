version: "3.7"

x-logging: &default-logging
  driver: local
  options:
    max-size: "10m"
    max-file: "3"

x-healthcheck: &default-health-check
  interval: 30s
  timeout: 10s
  retries: 5

services:
  redis:
    image: redis:7-alpine
    healthcheck:
      <<: *default-health-check
      test: [ "CMD", "redis-cli", "ping" ]
    logging: *default-logging

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data:rw
    ports:
      - "5432:5432"
    logging: *default-logging

  adminer:
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres

  php:
    image: test_task_php
    build:
      context: ./services/api
      target: final
    volumes:
      - ./services/api:/var/www:rw,cached
      - php_socket:/var/run/php
    command: sh -c "composer install && php-fpm"
    depends_on:
      - postgres
      - redis
    healthcheck:
      <<: *default-health-check
      start_period: 30s
    logging: *default-logging

  supervisor:
    image: test_task_php
    build:
      context: ./services/api
      target: final
    command: supervisord -c /etc/supervisor/conf.d/worker.conf
    volumes:
      - ./services/api:/var/www
      - ./services/api/docker/php/api.ini:/usr/local/etc/php/php.ini
      - ./services/api/docker/supervisor/worker.conf:/etc/supervisor/conf.d/worker.conf
    depends_on:
      - php
    healthcheck:
      <<: *default-health-check
      start_period: 30s
    logging: *default-logging

  cron:
    image: test_task_php
    build:
      context: ./services/api
      target: final
    command: php artisan schedule:work
    volumes:
      - ./services/api:/var/www
      - ./services/api/docker/php/api.ini:/usr/local/etc/php/php.ini
    depends_on:
      - php
    healthcheck:
      <<: *default-health-check
      start_period: 30s
    logging: *default-logging

  caddy:
    build:
      context: ./docker/caddy
      target: local
    depends_on:
      - php
    environment:
      DOMAIN: ${DOMAIN}
    restart: unless-stopped
    volumes:
      - ./services/api:/var/www:ro
      - ./docker/caddy/Caddyfile.local:/etc/caddy/Caddyfile:ro
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - "80:80"
      - "443:443"
    healthcheck: *default-health-check
    logging: *default-logging

volumes:
  redis:
  postgres:
  php_socket:
  caddy_data:
  caddy_config:
